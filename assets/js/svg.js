(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});
exports['default'] = loadDataSrcSVG;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

function replaceAttributes(new_, old) {
	for (var i = 0; i < old.attributes.length; i++) {
		var attr = old.attributes[i];
		new_.setAttribute(attr.name, attr.value);
	}
}

/** embed SVGs via data-src
 * e.g. <svg data-src="images/test.svg"></svg>.
 * Useful for styling and using class="fragment" in SVG code
 */

function loadDataSrcSVG() {
	var svgsToLoad = [].concat(_toConsumableArray(document.querySelectorAll('svg[data-src]')));

	var loadSVGs = svgsToLoad.map(function (svg) {
		return fetch(svg.getAttribute('data-src')).then(function (response) {
			return response.text();
		}).then(function (svgCode) {
			var svgDoc = new DOMParser().parseFromString(svgCode, 'image/svg+xml');
			var newSVG = svgDoc.documentElement;
			replaceAttributes(newSVG, svg);
			svg.parentNode.replaceChild(newSVG, svg);
		})['catch'](function (error) {
			if (!(error instanceof TypeError)) throw error;
			var img = document.createElement('img');
			img.setAttribute('src', svg.getAttribute('data-src'));
			replaceAttributes(img, svg);
			svg.parentNode.replaceChild(img, svg);
		});
	});

	Promise.all(loadSVGs).then(function (val) {
		var _iteratorNormalCompletion = true;
		var _didIteratorError = false;
		var _iteratorError = undefined;

		try {
			for (var _iterator = document.querySelectorAll('svg.stretch:not([preserveAspectRatio])')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
				var svg = _step.value;

				if (!svg.hasAttribute('viewBox')) {
					var w = svg.getAttribute('width');
					var h = svg.getAttribute('height');
					svg.setAttribute('viewBox', '0 0 ' + w + ' ' + h);
				}
				svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');
			}
		} catch (err) {
			_didIteratorError = true;
			_iteratorError = err;
		} finally {
			try {
				if (!_iteratorNormalCompletion && _iterator['return']) {
					_iterator['return']();
				}
			} finally {
				if (_didIteratorError) {
					throw _iteratorError;
				}
			}
		}
	});
}

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6L0Ryb3Bib3gvMDMgV29yay9QcmVzZW50YXRpZXMvZnJvbnRlZXJzMjAxNy9wcmVzZW50YXRpb24tdGVtcGxhdGUvc291cmNlL2phdmFzY3JpcHRzL2Zha2VfZjBhYzlkNWYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7cUJBV3dCLGNBQWM7Ozs7QUFYdEMsU0FBUyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFO0FBQ3JDLE1BQUssSUFBSSxDQUFDLEdBQUMsQ0FBQyxFQUFFLENBQUMsR0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUMzQyxNQUFJLElBQUksR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQzVCLE1BQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7RUFDeEM7Q0FDRDs7Ozs7OztBQU1jLFNBQVMsY0FBYyxHQUFHO0FBQ3hDLEtBQUksVUFBVSxnQ0FBUSxRQUFRLENBQUMsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLEVBQUUsQ0FBQTs7QUFFbEUsS0FBSSxRQUFRLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxVQUFBLEdBQUc7U0FBSSxLQUFLLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUN0RSxJQUFJLENBQUMsVUFBQSxRQUFRO1VBQUksUUFBUSxDQUFDLElBQUksRUFBRTtHQUFBLENBQUMsQ0FDakMsSUFBSSxDQUFDLFVBQUEsT0FBTyxFQUFJO0FBQ2hCLE9BQUksTUFBTSxHQUFHLElBQUksU0FBUyxFQUFFLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxlQUFlLENBQUMsQ0FBQTtBQUN0RSxPQUFJLE1BQU0sR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFBO0FBQ25DLG9CQUFpQixDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQTtBQUM5QixNQUFHLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUE7R0FDeEMsQ0FBQyxTQUNJLENBQUMsVUFBQSxLQUFLLEVBQUk7QUFDZixPQUFJLEVBQUUsS0FBSyxZQUFZLFNBQVMsQ0FBQSxBQUFDLEVBQ2hDLE1BQU0sS0FBSyxDQUFBO0FBQ1osT0FBSSxHQUFHLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQTtBQUN2QyxNQUFHLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxHQUFHLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUE7QUFDckQsb0JBQWlCLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFBO0FBQzNCLE1BQUcsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQTtHQUNyQyxDQUFDO0VBQUEsQ0FBQyxDQUFBOztBQUVKLFFBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsR0FBRyxFQUFJOzs7Ozs7QUFDakMsd0JBQWdCLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyx3Q0FBd0MsQ0FBQyw4SEFBRTtRQUE1RSxHQUFHOztBQUNYLFFBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxFQUFFO0FBQ2pDLFNBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUE7QUFDakMsU0FBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQTtBQUNsQyxRQUFHLENBQUMsWUFBWSxDQUFDLFNBQVMsV0FBUyxDQUFDLFNBQUksQ0FBQyxDQUFHLENBQUE7S0FDNUM7QUFDRCxPQUFHLENBQUMsWUFBWSxDQUFDLHFCQUFxQixFQUFFLGVBQWUsQ0FBQyxDQUFBO0lBQ3hEOzs7Ozs7Ozs7Ozs7Ozs7RUFDRCxDQUFDLENBQUE7Q0FDRiIsImZpbGUiOiJEOi9Ecm9wYm94LzAzIFdvcmsvUHJlc2VudGF0aWVzL2Zyb250ZWVyczIwMTcvcHJlc2VudGF0aW9uLXRlbXBsYXRlL3NvdXJjZS9qYXZhc2NyaXB0cy9mYWtlX2YwYWM5ZDVmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gcmVwbGFjZUF0dHJpYnV0ZXMobmV3Xywgb2xkKSB7XHJcblx0Zm9yIChsZXQgaT0wOyBpPG9sZC5hdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRsZXQgYXR0ciA9IG9sZC5hdHRyaWJ1dGVzW2ldXHJcblx0XHRuZXdfLnNldEF0dHJpYnV0ZShhdHRyLm5hbWUsIGF0dHIudmFsdWUpXHJcblx0fVxyXG59XHJcblxyXG4vKiogZW1iZWQgU1ZHcyB2aWEgZGF0YS1zcmNcclxuICogZS5nLiA8c3ZnIGRhdGEtc3JjPVwiaW1hZ2VzL3Rlc3Quc3ZnXCI+PC9zdmc+LlxyXG4gKiBVc2VmdWwgZm9yIHN0eWxpbmcgYW5kIHVzaW5nIGNsYXNzPVwiZnJhZ21lbnRcIiBpbiBTVkcgY29kZVxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9hZERhdGFTcmNTVkcoKSB7XHJcblx0bGV0IHN2Z3NUb0xvYWQgPSBbIC4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3N2Z1tkYXRhLXNyY10nKSBdXHJcblx0XHJcblx0bGV0IGxvYWRTVkdzID0gc3Znc1RvTG9hZC5tYXAoc3ZnID0+IGZldGNoKHN2Zy5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3JjJykpXHJcblx0XHQudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS50ZXh0KCkpXHJcblx0XHQudGhlbihzdmdDb2RlID0+IHtcclxuXHRcdFx0bGV0IHN2Z0RvYyA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoc3ZnQ29kZSwgJ2ltYWdlL3N2Zyt4bWwnKVxyXG5cdFx0XHRsZXQgbmV3U1ZHID0gc3ZnRG9jLmRvY3VtZW50RWxlbWVudFxyXG5cdFx0XHRyZXBsYWNlQXR0cmlidXRlcyhuZXdTVkcsIHN2ZylcclxuXHRcdFx0c3ZnLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKG5ld1NWRywgc3ZnKVxyXG5cdFx0fSlcclxuXHRcdC5jYXRjaChlcnJvciA9PiB7XHJcblx0XHRcdGlmICghKGVycm9yIGluc3RhbmNlb2YgVHlwZUVycm9yKSlcclxuXHRcdFx0XHR0aHJvdyBlcnJvclxyXG5cdFx0XHRsZXQgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJylcclxuXHRcdFx0aW1nLnNldEF0dHJpYnV0ZSgnc3JjJywgc3ZnLmdldEF0dHJpYnV0ZSgnZGF0YS1zcmMnKSlcclxuXHRcdFx0cmVwbGFjZUF0dHJpYnV0ZXMoaW1nLCBzdmcpXHJcblx0XHRcdHN2Zy5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChpbWcsIHN2ZylcclxuXHRcdH0pKVxyXG5cdFxyXG5cdFByb21pc2UuYWxsKGxvYWRTVkdzKS50aGVuKHZhbCA9PiB7XHJcblx0XHRmb3IgKGxldCBzdmcgb2YgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3ZnLnN0cmV0Y2g6bm90KFtwcmVzZXJ2ZUFzcGVjdFJhdGlvXSknKSkge1xyXG5cdFx0XHRpZiAoIXN2Zy5oYXNBdHRyaWJ1dGUoJ3ZpZXdCb3gnKSkge1xyXG5cdFx0XHRcdGxldCB3ID0gc3ZnLmdldEF0dHJpYnV0ZSgnd2lkdGgnKVxyXG5cdFx0XHRcdGxldCBoID0gc3ZnLmdldEF0dHJpYnV0ZSgnaGVpZ2h0JylcclxuXHRcdFx0XHRzdmcuc2V0QXR0cmlidXRlKCd2aWV3Qm94JywgYDAgMCAke3d9ICR7aH1gKVxyXG5cdFx0XHR9XHJcblx0XHRcdHN2Zy5zZXRBdHRyaWJ1dGUoJ3ByZXNlcnZlQXNwZWN0UmF0aW8nLCAneE1pZFlNaWQgbWVldCcpXHJcblx0XHR9XHJcblx0fSlcclxufSJdfQ==
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
