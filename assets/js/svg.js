(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});
exports['default'] = loadDataSrcSVG;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

function replaceAttributes(new_, old) {
	for (var i = 0; i < old.attributes.length; i++) {
		var attr = old.attributes[i];
		new_.setAttribute(attr.name, attr.value);
	}
}

/** embed SVGs via data-src
 * e.g. <svg data-src="images/test.svg"></svg>.
 * Useful for styling and using class="fragment" in SVG code
 */

function loadDataSrcSVG() {
	var svgsToLoad = [].concat(_toConsumableArray(document.querySelectorAll('svg[data-src]')));

	var loadSVGs = svgsToLoad.map(function (svg) {
		return fetch(svg.getAttribute('data-src')).then(function (response) {
			return response.text();
		}).then(function (svgCode) {
			var svgDoc = new DOMParser().parseFromString(svgCode, 'image/svg+xml');
			var newSVG = svgDoc.documentElement;
			replaceAttributes(newSVG, svg);
			svg.parentNode.replaceChild(newSVG, svg);
		})['catch'](function (error) {
			if (!(error instanceof TypeError)) throw error;
			var img = document.createElement('img');
			img.setAttribute('src', svg.getAttribute('data-src'));
			replaceAttributes(img, svg);
			svg.parentNode.replaceChild(img, svg);
		});
	});

	Promise.all(loadSVGs).then(function (val) {
		var _iteratorNormalCompletion = true;
		var _didIteratorError = false;
		var _iteratorError = undefined;

		try {
			for (var _iterator = document.querySelectorAll('svg.stretch:not([preserveAspectRatio])')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
				var svg = _step.value;

				if (!svg.hasAttribute('viewBox')) {
					var w = svg.getAttribute('width');
					var h = svg.getAttribute('height');
					svg.setAttribute('viewBox', '0 0 ' + w + ' ' + h);
				}
				svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');
			}
		} catch (err) {
			_didIteratorError = true;
			_iteratorError = err;
		} finally {
			try {
				if (!_iteratorNormalCompletion && _iterator['return']) {
					_iterator['return']();
				}
			} finally {
				if (_didIteratorError) {
					throw _iteratorError;
				}
			}
		}
	});
}

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6L0Ryb3Bib3gvMDMgV29yay9QcmVzZW50YXRpZXMvZnJvbnRlZXJzMjAxN3ByZXNvL3NvdXJjZS9qYXZhc2NyaXB0cy9mYWtlXzc0NmJmYjUzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O3FCQVd3QixjQUFjOzs7O0FBWHRDLFNBQVMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRTtBQUNyQyxNQUFLLElBQUksQ0FBQyxHQUFDLENBQUMsRUFBRSxDQUFDLEdBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDM0MsTUFBSSxJQUFJLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUM1QixNQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO0VBQ3hDO0NBQ0Q7Ozs7Ozs7QUFNYyxTQUFTLGNBQWMsR0FBRztBQUN4QyxLQUFJLFVBQVUsZ0NBQVEsUUFBUSxDQUFDLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUE7O0FBRWxFLEtBQUksUUFBUSxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsVUFBQSxHQUFHO1NBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FDdEUsSUFBSSxDQUFDLFVBQUEsUUFBUTtVQUFJLFFBQVEsQ0FBQyxJQUFJLEVBQUU7R0FBQSxDQUFDLENBQ2pDLElBQUksQ0FBQyxVQUFBLE9BQU8sRUFBSTtBQUNoQixPQUFJLE1BQU0sR0FBRyxJQUFJLFNBQVMsRUFBRSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsZUFBZSxDQUFDLENBQUE7QUFDdEUsT0FBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLGVBQWUsQ0FBQTtBQUNuQyxvQkFBaUIsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUE7QUFDOUIsTUFBRyxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFBO0dBQ3hDLENBQUMsU0FDSSxDQUFDLFVBQUEsS0FBSyxFQUFJO0FBQ2YsT0FBSSxFQUFFLEtBQUssWUFBWSxTQUFTLENBQUEsQUFBQyxFQUNoQyxNQUFNLEtBQUssQ0FBQTtBQUNaLE9BQUksR0FBRyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUE7QUFDdkMsTUFBRyxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFBO0FBQ3JELG9CQUFpQixDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQTtBQUMzQixNQUFHLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUE7R0FDckMsQ0FBQztFQUFBLENBQUMsQ0FBQTs7QUFFSixRQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLEdBQUcsRUFBSTs7Ozs7O0FBQ2pDLHdCQUFnQixRQUFRLENBQUMsZ0JBQWdCLENBQUMsd0NBQXdDLENBQUMsOEhBQUU7UUFBNUUsR0FBRzs7QUFDWCxRQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsRUFBRTtBQUNqQyxTQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFBO0FBQ2pDLFNBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUE7QUFDbEMsUUFBRyxDQUFDLFlBQVksQ0FBQyxTQUFTLFdBQVMsQ0FBQyxTQUFJLENBQUMsQ0FBRyxDQUFBO0tBQzVDO0FBQ0QsT0FBRyxDQUFDLFlBQVksQ0FBQyxxQkFBcUIsRUFBRSxlQUFlLENBQUMsQ0FBQTtJQUN4RDs7Ozs7Ozs7Ozs7Ozs7O0VBQ0QsQ0FBQyxDQUFBO0NBQ0YiLCJmaWxlIjoiRDovRHJvcGJveC8wMyBXb3JrL1ByZXNlbnRhdGllcy9mcm9udGVlcnMyMDE3cHJlc28vc291cmNlL2phdmFzY3JpcHRzL2Zha2VfNzQ2YmZiNTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiByZXBsYWNlQXR0cmlidXRlcyhuZXdfLCBvbGQpIHtcclxuXHRmb3IgKGxldCBpPTA7IGk8b2xkLmF0dHJpYnV0ZXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdGxldCBhdHRyID0gb2xkLmF0dHJpYnV0ZXNbaV1cclxuXHRcdG5ld18uc2V0QXR0cmlidXRlKGF0dHIubmFtZSwgYXR0ci52YWx1ZSlcclxuXHR9XHJcbn1cclxuXHJcbi8qKiBlbWJlZCBTVkdzIHZpYSBkYXRhLXNyY1xyXG4gKiBlLmcuIDxzdmcgZGF0YS1zcmM9XCJpbWFnZXMvdGVzdC5zdmdcIj48L3N2Zz4uXHJcbiAqIFVzZWZ1bCBmb3Igc3R5bGluZyBhbmQgdXNpbmcgY2xhc3M9XCJmcmFnbWVudFwiIGluIFNWRyBjb2RlXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsb2FkRGF0YVNyY1NWRygpIHtcclxuXHRsZXQgc3Znc1RvTG9hZCA9IFsgLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3ZnW2RhdGEtc3JjXScpIF1cclxuXHRcclxuXHRsZXQgbG9hZFNWR3MgPSBzdmdzVG9Mb2FkLm1hcChzdmcgPT4gZmV0Y2goc3ZnLmdldEF0dHJpYnV0ZSgnZGF0YS1zcmMnKSlcclxuXHRcdC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLnRleHQoKSlcclxuXHRcdC50aGVuKHN2Z0NvZGUgPT4ge1xyXG5cdFx0XHRsZXQgc3ZnRG9jID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhzdmdDb2RlLCAnaW1hZ2Uvc3ZnK3htbCcpXHJcblx0XHRcdGxldCBuZXdTVkcgPSBzdmdEb2MuZG9jdW1lbnRFbGVtZW50XHJcblx0XHRcdHJlcGxhY2VBdHRyaWJ1dGVzKG5ld1NWRywgc3ZnKVxyXG5cdFx0XHRzdmcucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQobmV3U1ZHLCBzdmcpXHJcblx0XHR9KVxyXG5cdFx0LmNhdGNoKGVycm9yID0+IHtcclxuXHRcdFx0aWYgKCEoZXJyb3IgaW5zdGFuY2VvZiBUeXBlRXJyb3IpKVxyXG5cdFx0XHRcdHRocm93IGVycm9yXHJcblx0XHRcdGxldCBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKVxyXG5cdFx0XHRpbWcuc2V0QXR0cmlidXRlKCdzcmMnLCBzdmcuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpKVxyXG5cdFx0XHRyZXBsYWNlQXR0cmlidXRlcyhpbWcsIHN2ZylcclxuXHRcdFx0c3ZnLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKGltZywgc3ZnKVxyXG5cdFx0fSkpXHJcblx0XHJcblx0UHJvbWlzZS5hbGwobG9hZFNWR3MpLnRoZW4odmFsID0+IHtcclxuXHRcdGZvciAobGV0IHN2ZyBvZiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzdmcuc3RyZXRjaDpub3QoW3ByZXNlcnZlQXNwZWN0UmF0aW9dKScpKSB7XHJcblx0XHRcdGlmICghc3ZnLmhhc0F0dHJpYnV0ZSgndmlld0JveCcpKSB7XHJcblx0XHRcdFx0bGV0IHcgPSBzdmcuZ2V0QXR0cmlidXRlKCd3aWR0aCcpXHJcblx0XHRcdFx0bGV0IGggPSBzdmcuZ2V0QXR0cmlidXRlKCdoZWlnaHQnKVxyXG5cdFx0XHRcdHN2Zy5zZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnLCBgMCAwICR7d30gJHtofWApXHJcblx0XHRcdH1cclxuXHRcdFx0c3ZnLnNldEF0dHJpYnV0ZSgncHJlc2VydmVBc3BlY3RSYXRpbycsICd4TWlkWU1pZCBtZWV0JylcclxuXHRcdH1cclxuXHR9KVxyXG59Il19
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
